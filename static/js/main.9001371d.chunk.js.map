{"version":3,"sources":["components/card/Card.jsx","components/card-list/CardList.jsx","components/search-box/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","person","id","alt","name","email","CardList","people","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","currentTarget","value","state","fetch","then","response","json","users","catch","err","console","log","message","this","filteredPeople","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAeeA,EAbF,SAACC,GACZ,OACE,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,OAAOC,GAAvC,0BACHC,IAAI,YAEN,6BAAKL,EAAMG,OAAOG,OAClB,4BAAIN,EAAMG,OAAOI,YCIRC,EAVE,SAACR,GAChB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,OAAOC,KAAI,SAACP,GAAD,OAChB,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOC,UCKXO,G,MAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC8BDG,E,kDAjCb,aAAe,IAAD,8BACZ,gBAYFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,cAAcC,SAZ7C,EAAKC,MAAQ,CACXb,OAAQ,GACRU,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,OAAQkB,OACxCC,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,EAAIG,c,oBAKpC,WACE,MAAgCC,KAAKX,MAA7Bb,EAAR,EAAQA,OAAQU,EAAhB,EAAgBA,YACVe,EAAiBzB,EAAO0B,QAAO,SAAChC,GAAD,OACnCA,EAAOG,KAAK8B,cAAcC,SAASlB,EAAYmB,wBAEjD,OACE,sBAAKrC,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEW,YAAY,gBACZC,aAAcoB,KAAKpB,eAErB,cAAC,EAAD,CAAUJ,OAAQyB,W,GA7BRK,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9001371d.chunk.js","sourcesContent":["import \"./Card.styles.css\";\n\nconst Card = (props) => {\n  return (\n    <div className=\"card-container\">\n      <img\n        src={`https://robohash.org/${props.person.id}?set=set5&size=180x180`}\n        alt=\"monster\"\n      />\n      <h2>{props.person.name}</h2>\n      <p>{props.person.email}</p>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"./CardList.styles.css\";\nimport Card from \"../card/Card\";\n\nconst CardList = (props) => {\n  return (\n    <div className=\"card-list\">\n      {props.people.map((person) => (\n        <Card key={person.id} person={person}></Card>\n      ))}\n    </div>\n  );\n};\n\nexport default CardList;\n","import \"./SearchBox.styles.css\";\n\nconst SearchBox = ({ placeholder, handleChange }) => {\n  return (\n    <input\n      className=\"search\"\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./components/card-list/CardList\";\nimport SearchBox from \"./components/search-box/SearchBox\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      people: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ people: users }))\n      .catch((err) => console.log(err.message));\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.currentTarget.value });\n  };\n  render() {\n    const { people, searchField } = this.state;\n    const filteredPeople = people.filter((person) =>\n      person.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>People Rolodex </h1>\n        <SearchBox\n          placeholder=\"search people\"\n          handleChange={this.handleChange}\n        />\n        <CardList people={filteredPeople}></CardList>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}